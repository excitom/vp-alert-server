/*
 * Add an access list entry for a notify list
 *
 * Sending messages to a notify list is restricted to users
 * on the access list.
 *
 * Input: List ID, nickName, message limit (per interval), interval (minutes)
 *
 * Output: 0 = success
 *         1 = success, existing entry updated
 *         20000 = list not found
 *         20001 = deleted list
 *         20002 = locked list
 *         20004 = user not found
 *         20005 = account closed/suspended/overdue
 */
CREATE PROC addNotifyAccessList ( 
	@notifyID 	userIdentifier,
	@nickName	VPuserID,
	@maxMsgs	smallint = 2,
	@msgInterval	smallint = 1440
)
AS
BEGIN
  DECLARE @lastError	int
  DECLARE @rc		int
  DECLARE @locked	bit
  DECLARE @deleted	bit
  DECLARE @userID	userIdentifier
  DECLARE @accountID	userIdentifier
  DECLARE @accountStatus	tinyint

  BEGIN TRAN
    IF EXISTS (SELECT * FROM notifyLists WHERE notifyID = @notifyID)
    BEGIN
      SELECT @locked = locked, @deleted = deleted
      FROM notifyLists
      WHERE notifyID = @notifyID

      SELECT @lastError = @@error
      IF @lastError != 0
      BEGIN
        ROLLBACK TRAN
        RETURN @lastError
      END

      IF @locked = 1
      BEGIN
        ROLLBACK TRAN
        RETURN 20002
      END

      IF @deleted = 1
      BEGIN
        ROLLBACK TRAN
        RETURN 20001
      END

      SELECT @nickName = lower(@nickName)
      SELECT @nickName = ltrim(@nickName)

      SELECT @userID    = vpusers..users.userID,
             @accountID = accountID
        FROM vpusers..users, vpusers..registration
        WHERE nickName = @nickName
          AND registrationMode = 2
          AND locked = 0
          AND vpusers..users.userID = vpusers..registration.userID

      IF @userID IS NULL
      BEGIN
        ROLLBACK TRAN
        RETURN 20004
      END

      SELECT @accountStatus = accountStatus
        FROM vpusers..userAccounts
        WHERE accountID = @accountID

      SELECT @lastError = @@error
      IF @lastError != 0
      BEGIN
        ROLLBACK TRAN
        RETURN @lastError
      END

      IF @accountStatus != 0
      BEGIN
        ROLLBACK TRAN
        RETURN 20005
      END

      IF EXISTS (SELECT * FROM notifyAccessList
                   WHERE accountID = @accountID
                   AND   notifyID  = @notifyID)
      BEGIN
        UPDATE notifyAccessList
          SET userID = @userID,
              maxMsgs = @maxMsgs,
              msgInterval = @msgInterval
          WHERE notifyID = @notifyID
          AND accountID = @accountID
        SELECT @rc = 1
      END
      ELSE BEGIN
        INSERT notifyAccessList (notifyID, userID, accountID, maxMsgs, msgInterval, msgCount, locked)
          VALUES (@notifyID, @userID, @accountID, @maxMsgs, @msgInterval, 0, 0)
        SELECT @rc = 0
      END

      SELECT @lastError = @@error
      IF @lastError != 0
      BEGIN
        ROLLBACK TRAN
        RETURN @lastError
      END
    END
    ELSE BEGIN
      ROLLBACK TRAN
      RETURN 20000
    END

  COMMIT TRAN
  RETURN @rc
END
GO
